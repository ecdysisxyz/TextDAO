// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class CommandScored extends ethereum.Event {
  get params(): CommandScored__Params {
    return new CommandScored__Params(this);
  }
}

export class CommandScored__Params {
  _event: CommandScored;

  constructor(event: CommandScored) {
    this._event = event;
  }

  get pid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get cmdId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get currentScore(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class HeaderScored extends ethereum.Event {
  get params(): HeaderScored__Params {
    return new HeaderScored__Params(this);
  }
}

export class HeaderScored__Params {
  _event: HeaderScored;

  constructor(event: HeaderScored) {
    this._event = event;
  }

  get pid(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get headerId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get currentScore(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Vote extends ethereum.SmartContract {
  static bind(address: Address): Vote {
    return new Vote("Vote", address);
  }

  voteCmds(pid: BigInt, cmdIds: Array<BigInt>): boolean {
    let result = super.call("voteCmds", "voteCmds(uint256,uint256[3]):(bool)", [
      ethereum.Value.fromUnsignedBigInt(pid),
      ethereum.Value.fromUnsignedBigIntArray(cmdIds),
    ]);

    return result[0].toBoolean();
  }

  try_voteCmds(
    pid: BigInt,
    cmdIds: Array<BigInt>,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "voteCmds",
      "voteCmds(uint256,uint256[3]):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(pid),
        ethereum.Value.fromUnsignedBigIntArray(cmdIds),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  voteHeaders(pid: BigInt, headerIds: Array<BigInt>): boolean {
    let result = super.call(
      "voteHeaders",
      "voteHeaders(uint256,uint256[3]):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(pid),
        ethereum.Value.fromUnsignedBigIntArray(headerIds),
      ],
    );

    return result[0].toBoolean();
  }

  try_voteHeaders(
    pid: BigInt,
    headerIds: Array<BigInt>,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "voteHeaders",
      "voteHeaders(uint256,uint256[3]):(bool)",
      [
        ethereum.Value.fromUnsignedBigInt(pid),
        ethereum.Value.fromUnsignedBigIntArray(headerIds),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class VoteCmdsCall extends ethereum.Call {
  get inputs(): VoteCmdsCall__Inputs {
    return new VoteCmdsCall__Inputs(this);
  }

  get outputs(): VoteCmdsCall__Outputs {
    return new VoteCmdsCall__Outputs(this);
  }
}

export class VoteCmdsCall__Inputs {
  _call: VoteCmdsCall;

  constructor(call: VoteCmdsCall) {
    this._call = call;
  }

  get pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get cmdIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class VoteCmdsCall__Outputs {
  _call: VoteCmdsCall;

  constructor(call: VoteCmdsCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class VoteHeadersCall extends ethereum.Call {
  get inputs(): VoteHeadersCall__Inputs {
    return new VoteHeadersCall__Inputs(this);
  }

  get outputs(): VoteHeadersCall__Outputs {
    return new VoteHeadersCall__Outputs(this);
  }
}

export class VoteHeadersCall__Inputs {
  _call: VoteHeadersCall;

  constructor(call: VoteHeadersCall) {
    this._call = call;
  }

  get pid(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get headerIds(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class VoteHeadersCall__Outputs {
  _call: VoteHeadersCall;

  constructor(call: VoteHeadersCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}
